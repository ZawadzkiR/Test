from flask import Flask, render_template, request
import sqlite3

app = Flask(__name__)

# Funkcja łącząca się z bazą danych SQLite
def get_db_connection():
    conn = sqlite3.connect('twoja_baza.db')
    conn.row_factory = sqlite3.Row  # Pozwala na zwracanie wyników jako słowniki
    return conn

# Pobranie nazw widoków (tabel) z bazy danych
def get_views():
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("SELECT name FROM sqlite_master WHERE type='view';")
    views = [row['name'] for row in cursor.fetchall()]
    conn.close()
    return views

# Pobranie danych z wybranego widoku
def get_table_data(view_name):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute(f"SELECT * FROM {view_name};")
    rows = cursor.fetchall()
    headers = [description[0] for description in cursor.description]  # Nagłówki kolumn
    conn.close()
    return headers, rows

@app.route('/', methods=['GET', 'POST'])
def index():
    views = get_views()  # Pobierz wszystkie widoki

    selected_view = None
    headers = []
    rows = []

    if request.method == 'POST':
        selected_view = request.form.get('view')  # Pobierz wybrany widok z formularza
        if selected_view:
            headers, rows = get_table_data(selected_view)  # Pobierz dane z wybranego widoku

    return render_template('index.html', views=views, selected_view=selected_view, headers=headers, rows=rows)

if __name__ == '__main__':
    app.run(debug=True)




<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SQLite Views</title>
    <script>
        // Funkcja wysyłająca formularz automatycznie po zmianie opcji w dropdownie
        function submitForm() {
            document.getElementById('viewForm').submit();
        }
    </script>
</head>
<body>
    <h1>Wybierz widok</h1>
    
    <!-- Formularz -->
    <form method="POST" id="viewForm">
        <label for="view">Widok:</label>
        <select name="view" id="view" onchange="submitForm()">  <!-- onchange wywołuje submitForm() -->
            {% for view in views %}
                <option value="{{ view }}" {% if view == selected_view %} selected {% endif %}>{{ view }}</option>
            {% endfor %}
        </select>
    </form>

    {% if selected_view %}
        <h2>Wybrany widok: {{ selected_view }}</h2>

        <table border="1">
            <thead>
                <tr>
                    {% for header in headers %}
                        <th>{{ header }}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for row in rows %}
                    <tr>
                        {% for col in row %}
                            <td>{{ col }}</td>
                        {% endfor %}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% endif %}
</body>
</html>

