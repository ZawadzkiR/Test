import os
import re
from bs4 import BeautifulSoup

def create_html_with_toc_and_content(root_dir, output_file):
    toc = []
    html_content = ["<html><head><title>Zebrane README</title></head><body>"]

    for current_dir, _, files in os.walk(root_dir):
        relative_dir = os.path.relpath(current_dir, root_dir)
        readme_path = os.path.join(current_dir, "readme.md")

        if "readme.md" in files:
            toc.append(relative_dir)
            html_content.append(f"<h2 id='{relative_dir}'>{relative_dir}</h2>")
            
            with open(readme_path, "r", encoding="utf-8") as f:
                content = f.read()
                html_content.append(markdown_to_html(content))

    # Dodajemy spis treści na początku
    html_content.insert(1, "<h1>Spis treści</h1><ul>")
    for dir_name in toc:
        html_content.insert(2, f"<li><a href='#{dir_name}'>{dir_name}</a></li>")
    html_content.insert(3, "</ul>")

    html_content.append("</body></html>")
    with open(output_file, "w", encoding="utf-8") as f:
        f.write("\n".join(html_content))

def collect_tables_from_readme(root_dir, output_file):
    all_tables = []

    for current_dir, _, files in os.walk(root_dir):
        readme_path = os.path.join(current_dir, "readme.md")

        if "readme.md" in files:
            with open(readme_path, "r", encoding="utf-8") as f:
                content = f.read()
                tables = extract_tables(content)
                all_tables.extend(tables)

    # Zapisanie tabel w formacie Markdown
    if all_tables:
        with open(output_file, "w", encoding="utf-8") as f:
            f.write("# Zebrane tabele\n\n")
            for table in all_tables:
                f.write(table)
                f.write("\n\n")

def extract_tables(content):
    """Wyszukuje tabele w pliku Markdown."""
    table_pattern = re.compile(r"(\|.*?\|\n)(\|[-:| ]+\|\n)((\|.*?\|\n)+)", re.DOTALL)
    matches = table_pattern.findall(content)
    return [match[0] + match[1] + match[2] for match in matches]

def markdown_to_html(markdown_content):
    """Konwertuje Markdown na HTML."""
    try:
        from markdown2 import markdown
        return markdown(markdown_content)
    except ImportError:
        soup = BeautifulSoup(markdown_content, "html.parser")
        return str(soup)

if __name__ == "__main__":
    root_directory = "KATALOG"
    html_output = "zebrane_readme.html"
    table_output = "zebrane_tabele.md"

    create_html_with_toc_and_content(root_directory, html_output)
    collect_tables_from_readme(root_directory, table_output)

    print(f"Plik HTML zapisany jako: {html_output}")
    print(f"Plik z tabelami zapisany jako: {table_output}")
