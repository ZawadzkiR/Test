import os
import re
import csv
from collections import defaultdict

def extract_tables_from_file(file_path, process_name):
    pattern = re.compile(r'\b(\w+\.v_\w+)\b', re.IGNORECASE)
    tables = defaultdict(set)
    
    with open(file_path, 'r', encoding='utf-8', errors='ignore') as file:
        for line in file:
            matches = pattern.findall(line)
            for match in matches:
                tables[match].add(process_name)
    
    return tables

def scan_directory(directory):
    extracted_tables = defaultdict(set)
    
    for root, _, files in os.walk(directory):
        process_name = os.path.basename(root)  # Nazwa katalogu jako nazwa procesu
        for file in files:
            if file.endswith('.sql') or file.endswith('.py'):
                file_path = os.path.join(root, file)
                file_tables = extract_tables_from_file(file_path, process_name)
                for table, processes in file_tables.items():
                    extracted_tables[table].update(processes)
    
    return extracted_tables

def save_to_csv(tables, output_file):
    with open(output_file, 'w', newline='', encoding='utf-8') as file:
        writer = csv.writer(file)
        writer.writerow(['Tabela', 'Procesy'])
        for table, processes in sorted(tables.items()):
            writer.writerow([table, ", ".join(sorted(processes))])

def main():
    directory = input("Podaj ścieżkę do katalogu z plikami: ")
    output_file = "extracted_tables.csv"
    
    tables = scan_directory(directory)
    save_to_csv(tables, output_file)
    
    print(f"Znalezione tabele zapisano do {output_file}")

if __name__ == "__main__":
    main()
