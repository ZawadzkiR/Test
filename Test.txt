import os
import yaml
import subprocess
import getpass
import tempfile

PYTHON_PATH = subprocess.check_output(["which", "python3"]).decode().strip()
RUNNER_PATH = os.path.abspath("runner.py")

# Wczytaj pliki YAML
with open("tasks.yaml") as f:
    tasks = yaml.safe_load(f)

# Przygotuj wpisy crontab dla każdego użytkownika
user_cron = {}

for task_name, task in tasks.items():
    schedule = task.get("schedule")
    user = task.get("user", getpass.getuser())
    enabled = task.get("enabled", True)

    if not schedule:
        continue

    if "command" in task:
        command = task["command"]
    elif "jobs" in task:
        job_args = " ".join(task["jobs"])
        command = f"{PYTHON_PATH} {RUNNER_PATH} {job_args}"
    else:
        continue  # pomiń niepoprawnie zdefiniowane

    line = f"{schedule} {command} >> /tmp/{task_name}.log 2>&1  # Automate: {task_name}"

    if not enabled:
        line = f"# {line}"

    if user not in user_cron:
        user_cron[user] = []

    user_cron[user].append(line)

# Przetwarzanie crontabów każdego użytkownika osobno
for user, new_lines in user_cron.items():
    # Pobierz obecny crontab użytkownika
    try:
        result = subprocess.run(["crontab", "-l", "-u", user], capture_output=True, text=True, check=False)
        existing_cron = result.stdout if result.returncode == 0 else ""
    except Exception as e:
        print(f"Nie można pobrać crontaba dla użytkownika {user}: {e}")
        existing_cron = ""

    # Usuń wszystkie poprzednie wpisy Automate tego użytkownika
    filtered_lines = [line for line in existing_cron.splitlines() if "# Automate:" not in line]

    # Dodaj nowe
    updated_cron = "\n".join(filtered_lines + new_lines) + "\n"

    # Zapisz do tymczasowego pliku
    with tempfile.NamedTemporaryFile(delete=False, mode="w") as tmpfile:
        tmpfile.write(updated_cron)
        tmpfile_path = tmpfile.name

    # Załaduj nowy crontab
    subprocess.run(["crontab", "-u", user, tmpfile_path])

    print(f"✅ Crontab zaktualizowany dla użytkownika: {user}")
    os.unlink(tmpfile_path)
