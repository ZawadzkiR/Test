import pandas as pd

def porownaj_dataframe(df1, df2, keys):
    # Sprawdzenie, czy kolumny kluczowe są obecne w obu dataframe'ach
    for key in keys:
        if key not in df1.columns or key not in df2.columns:
            raise ValueError(f"Kolumna kluczowa '{key}' nie znajduje się w jednym z dataframe'ów.")

    # Wykonanie full outer join na podanych kolumnach kluczowych
    merged_df = pd.merge(df1, df2, on=keys, how='outer', suffixes=('_df1', '_df2'))
    
    # Przygotowanie kolumn porównawczych (wszystkie kolumny oprócz kluczy)
    comparison_cols = [col for col in df1.columns if col not in keys]

    # Tworzenie maski różnic
    diff_mask = pd.DataFrame(index=merged_df.index)
    for col in comparison_cols:
        col_df1 = col + '_df1'
        col_df2 = col + '_df2'
        diff_mask[col] = merged_df[col_df1].ne(merged_df[col_df2])
    
    # Filtracja tylko tych wierszy, w których są różnice
    rows_with_differences = diff_mask.any(axis=1)
    comparison_df = merged_df[rows_with_differences]
    
    # Przygotowanie kolumn do końcowego DataFrame
    final_columns = []
    for col in comparison_cols:
        final_columns.append(col + '_df1')
        final_columns.append(col + '_df2')
    
    result_df = comparison_df[final_columns]
    
    # Zmiana nazw kolumn na format porównawczy
    result_df.columns = pd.MultiIndex.from_tuples(
        [(col.split('_')[0], 'df1') if '_df1' in col else (col.split('_')[0], 'df2') for col in result_df.columns],
        names=['source', 'version']
    )
    
    return result_df

# Przykładowe użycie funkcji
df1 = pd.DataFrame({
    'id': [1, 2, 3],
    'name': ['Alice', 'Bob', 'Charlie'],
    'kwota': [100, 200, 300],
    'extra': ['A', 'B', 'C']
})

df2 = pd.DataFrame({
    'id': [1, 2, 4],
    'name': ['Alice', 'Bob', 'Daniel'],
    'kwota': [100, 250, 400],
    'extra': ['A', 'X', 'D']
})

result = porownaj_dataframe(df1, df2, keys=['id', 'name'])
print(result)
